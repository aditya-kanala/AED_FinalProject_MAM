/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Supplier;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mahith
 */
public class SupplierHome extends javax.swing.JPanel {

    /**
     * Creates new form SupplierHome
     */
    Connection connection;
    public SupplierHome(Connection connection) {
        initComponents();
        this.connection = connection;
        populateSupplierOrdersTable(connection);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplierOrders = new javax.swing.JTable();
        txtOrderID = new javax.swing.JTextField();
        lblOrderID = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        btnRaiseShipment = new javax.swing.JButton();
        cmbStatus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(25, 56, 82));

        tblSupplierOrders.setForeground(new java.awt.Color(255, 255, 255));
        tblSupplierOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Items", "Quantity", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblSupplierOrders);

        txtOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIDActionPerformed(evt);
            }
        });

        lblOrderID.setForeground(new java.awt.Color(255, 255, 255));
        lblOrderID.setText("Order ID");

        lblStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblStatus.setText("Status");

        btnRaiseShipment.setText("Raise shipment Request");
        btnRaiseShipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseShipmentActionPerformed(evt);
            }
        });

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Open", "Raise for Delivery" }));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("SUPPLIER ORDERS");

        jButton1.setText("View Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(472, 472, 472)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lblOrderID)
                                    .addGap(62, 62, 62)
                                    .addComponent(txtOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblStatus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnRaiseShipment)
                                            .addGap(145, 145, 145))
                                        .addComponent(cmbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnRaiseShipment)
                .addGap(206, 206, 206))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIDActionPerformed

    private void btnRaiseShipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseShipmentActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRowIndex = tblSupplierOrders.getSelectedRow();

            if(selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select an order to view its details");
            return;
            }
            
            DefaultTableModel model = (DefaultTableModel) tblSupplierOrders.getModel();
            String orderId = (String) model.getValueAt(selectedRowIndex, 0);
            String items = (String) model.getValueAt(selectedRowIndex, 1);
            int quantity = (int) model.getValueAt(selectedRowIndex, 2);
            String status = cmbStatus.getSelectedItem().toString();
        
                PreparedStatement preparedStatement =connection.prepareStatement("insert into shipment_orders values(?,?,?,?,?)");
                preparedStatement.setString(1, orderId);
                preparedStatement.setString(2,items);
                preparedStatement.setInt(3, quantity);
                preparedStatement.setInt(5,Integer.parseInt(status));

                preparedStatement.executeUpdate();
                System.out.println("Supplier Order inserted Successfully");

                populateSupplierOrdersTable(connection);
                initialSetup();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnRaiseShipmentActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRowIndex = tblSupplierOrders.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select an order to view its details");
            return;
        }

        lblOrderID.setVisible(true);
        txtOrderID.setVisible(true);

        lblStatus.setVisible(true);
        cmbStatus.setVisible(true);

        btnRaiseShipment.setVisible(true);

        DefaultTableModel model = (DefaultTableModel) tblSupplierOrders.getModel();
        String orderId = (String) model.getValueAt(selectedRowIndex, 0);
        String status = (String) model.getValueAt(selectedRowIndex, 4);

        txtOrderID.setText(orderId);
        cmbStatus.setSelectedItem(status);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void populateSupplierOrdersTable(Connection connection){
        DefaultTableModel model = (DefaultTableModel) tblSupplierOrders.getModel();
        model.setRowCount(0);
        try{
            PreparedStatement preparedStatement = (PreparedStatement) connection.prepareStatement("select * from supplier_orders");
            ResultSet rs = preparedStatement.executeQuery(); 
            while(rs.next()){
            Object[] rows = new Object[5];
            rows[0]= rs.getString(1);
            rows[1]=rs.getString(2);
            rows[2]=rs.getString(3);
            rows[3]=rs.getString(4);
            rows[4] =rs.getString(5);
            
            model.addRow(rows);
            }
        }
        catch(SQLException e){System.out.println(e);}
    }
    
    private void initialSetup(){
        lblOrderID.setVisible(false);
        txtOrderID.setVisible(false);
        
        lblStatus.setVisible(false);
        cmbStatus.setVisible(false);
        
        btnRaiseShipment.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRaiseShipment;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tblSupplierOrders;
    private javax.swing.JTextField txtOrderID;
    // End of variables declaration//GEN-END:variables
}
